// <auto-generated />
using System;
using Databases.TicketSystemContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackgroundApps.MigrationTicketSystem.Migrations
{
    [DbContext(typeof(TicketSystemDbContext))]
    [Migration("20211109050649_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Entities.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasComment("序號")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("建立日期");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("建立者")
                        .IsUnicode(true);

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("修改日期");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("修改者")
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'')")
                        .HasComment("名稱")
                        .IsUnicode(true);

                    b.HasKey("ID")
                        .HasName("PK_Menu")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Menu","system");
                });

            modelBuilder.Entity("Models.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasComment("序號")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("建立日期");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("建立者")
                        .IsUnicode(true);

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("修改日期");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("修改者")
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'')")
                        .HasComment("名稱")
                        .IsUnicode(true);

                    b.HasKey("ID")
                        .HasName("PK_Role")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Role","system");
                });

            modelBuilder.Entity("Models.Entities.RoleAuthority", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasComment("序號")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanDelete")
                        .HasColumnName("CanDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(1)")
                        .HasComment("是否可刪除");

                    b.Property<bool>("CanInsert")
                        .HasColumnName("CanInsert")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(1)")
                        .HasComment("是否可新增");

                    b.Property<bool>("CanRead")
                        .HasColumnName("CanRead")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(1)")
                        .HasComment("是否可讀");

                    b.Property<bool>("CanResolve")
                        .HasColumnName("CanResolve")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(1)")
                        .HasComment("是否可解決");

                    b.Property<bool>("CanUpdate")
                        .HasColumnName("CanUpdate")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(1)")
                        .HasComment("是否可修改");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("建立日期");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("建立者")
                        .IsUnicode(true);

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("修改日期");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("修改者")
                        .IsUnicode(true);

                    b.Property<int>("MenuID")
                        .HasColumnName("MenuID")
                        .HasColumnType("int")
                        .HasComment("菜單ID");

                    b.Property<int>("RoleID")
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasComment("權限ID");

                    b.HasKey("ID")
                        .HasName("PK_RoleAuthority")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("RoleAuthority","system");
                });

            modelBuilder.Entity("Models.Entities.Ticket", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasComment("序號")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("建立日期");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("建立者")
                        .IsUnicode(true);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("(N'')")
                        .HasComment("描述")
                        .IsUnicode(true);

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("修改日期");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("修改者")
                        .IsUnicode(true);

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Status")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(0)")
                        .HasComment("狀態");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Summary")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'')")
                        .HasComment("摘要")
                        .IsUnicode(true);

                    b.Property<byte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Type")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(0)")
                        .HasComment("類別: 1.bug單");

                    b.Property<int>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("ID")
                        .HasName("PK_Ticket")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Ticket","system");
                });

            modelBuilder.Entity("Models.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasComment("序號")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Account")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasComment("帳號")
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("建立日期");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("建立者")
                        .IsUnicode(true);

                    b.Property<DateTime>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedAt")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("修改日期");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'SYSTEM')")
                        .HasComment("修改者")
                        .IsUnicode(true);

                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasDefaultValueSql("(0)")
                        .HasComment("權限ID");

                    b.HasKey("ID")
                        .HasName("PK_User")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("User","system");
                });
#pragma warning restore 612, 618
        }
    }
}
